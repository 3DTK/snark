#!/bin/bash

config=config.json
prefix=ur5
publisher_port=$( name-value-get --from json $prefix/publisher/data/port < $config )
timeout=0.1
angle_tolerance=0.0001
status_sample=status_sample_stationary.bin
real_target=$( cat $status_sample | ur-arm-status --fields=arm/angles )
fake_target=1,2,3,4,5,6

if (( `lsof -n -i tcp:$publisher_port | grep LISTEN | wc -l` )); then 
    echo "$( readlink -f `basename $0` ): required port $publisher_port is already in use, try changing publisher port in config.json" >&2
    exit 1
fi

ur-arm wait --target=$fake_target --config=$config --prefix=$prefix --timeout=$timeout --tolerance=$angle_tolerance
status=$?
echo "waypoint/no_publisher/status=$status"

function bye { pkill -P $$; }
trap 'bye' INT HUP TERM 

while :; do cat $status_sample; sleep 0.01; done | io-publish -s $( ur-arm-status --packet-size ) tcp:$publisher_port 2>/dev/null &
ur-arm wait --target=$fake_target --config=$config --prefix=$prefix --timeout=$timeout --tolerance=$angle_tolerance
status=$?
echo "waypoint/timed_out/status=$status"
pkill -P $$

while :; do cat $status_sample; sleep 0.01; done | io-publish -s $( ur-arm-status --packet-size ) tcp:$publisher_port 2>/dev/null &
ur-arm wait --target=$real_target --config=$config --prefix=$prefix --timeout=$timeout --tolerance=$angle_tolerance
status=$?
echo "waypoint/success/status=$status"
pkill -P $$
