#!/bin/bash

prefix=./output/
feedback_file=${prefix}feedback
proximity=0.1

function clean
{
    pkill -P $$
    rm -f $feedback_file
}
trap clean EXIT

declare -A target=( [fields]="heading_offset,is_absolute,speed,x,y" [format]="d,b,3d" )
declare -A feedback=( [fields]="yaw,x,y" [format]="3d" )

cat <<END | csv-to-bin ${feedback[format]} > $feedback_file
0.5,0,0
0.5,1,1
0.5,1.5,0.5
0.5,2,0
0.5,2.5,0.5
0.5,3,1
0.5,3.5,0.5
0.5,4,0
END
output=( $( echo -e "0.5,0,10,1,1\n0.5,1,11,2,0\n0.5,0,12,3,1\n0.5,1,13,4,0" | csv-to-bin ${target[format]} \
    | control-error "$feedback_file;fields=${feedback[fields]};binary=${feedback[format]}" --fields=${target[fields]} --binary=${target[format]} --verbose \
    | csv-from-bin ${target[format]},${feedback[format]},$( control-error --output-format ) ) )

function echo_result
{
    local lhs=$1
    local result=$2
    local fields="heading_offset is_absolute speed x y feedback_yaw feedback_x feedback_y wayline_heading xtrack heading"
    local $fields
    IFS=, read $fields <<< $result
    echo "$lhs/x=$x"
    echo "$lhs/y=$y"
    echo "$lhs/is_absolute=$is_absolute"
    echo "$lhs/speed=$speed"
    echo "$lhs/xtrack=$xtrack"
    echo "$lhs/heading=$heading"
}

for(( i=0; i<4; i++ )); do echo_result "binary/output[$i]" "${output[i]}"; done

clean
