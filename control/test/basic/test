#!/bin/bash

prefix=./output/
feedback=${prefix}feedback
proximity=0.1

function clean
{
    pkill -P $$
    rm -f $feedback
    return 0
}
function bye { clean; exit 1; }
trap bye INT TERM HUP
trap clean EXIT

echo "format/input/x=\"$( control-error "filename" --fields=x --format )\""
echo "format/input/xy=\"$( control-error "filename" --fields=x,y --format )\""
echo "format/input/default=\"$( control-error "filename" --format )\""
echo "format/input/xyspeed=\"$( control-error "filename" --fields=x,y,speed --format )\""
echo "format/output/default=\"$( control-error "filename" --output-format )\""
echo "format/output/with_speed=\"$( control-error "filename" --fields=x,y,speed --output-format )\""
echo "format/output/heading=\"$( control-error "filename" --error-fields=heading --output-format )\""

echo -e "0,0,0\n0,0.5,0.5\n0,1,0\n0,1.5,-0.5\n0,2,0" | csv-to-bin 3d > $feedback
binary_test_output=( $( echo -e "10,1,0\n20,2,0" | csv-to-bin 3d | control-error "$feedback;fields=yaw,x,y;binary=3d" --fields=speed,x,y --binary=3d --error-fields=heading,cross_track --verbose | csv-from-bin 5d ) )

function echo_result
{
    local lhs=$1
    local result=$2
    local x y xtrack heading
    IFS=, read x y speed xtrack heading <<< $result
    echo "$lhs/x=$x"
    echo "$lhs/y=$y"
    echo "$lhs/speed=$speed"
    echo "$lhs/xtrack=$xtrack"
    echo "$lhs/heading=$heading"
}

echo_result "binary/output[0]" "${binary_test_output[0]}"
echo_result "binary/output[1]" "${binary_test_output[1]}"
echo_result "binary/output[2]" "${binary_test_output[2]}"

clean
