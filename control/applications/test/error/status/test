#!/bin/bash

mkdir -p output
feedback_file=output/feedback

echo "eps=0.001"
echo "format/input=\"$( control-error --format )\""
echo "format/output=\"$( control-error --output-format --status )\""
echo "fields/output=\"$( control-error --output-fields --status )\""

declare -A target=( [fields]="heading_offset,speed,x,y" [format]="4d" )
declare -A feedback=( [fields]="yaw,x,y" [format]="3d" )

# feedback trajectory looks like this
# /\
#   \/
# it starts from the origin, goes up, then down, through 1,0, continuing further down, then up to 2,0

cat <<END | csv-to-bin ${feedback[format]} > $feedback_file
1.1,0,0
0.9,0.5,0.5
1,1,0
2.1,1.5,-0.5
2,2,0
END

# targets are 1,0 and 2,0

output_fields=$( \
    {
        csv-fields prefix --path target <<< ${target[fields]}
        csv-fields prefix --path feedback <<< ${feedback[fields]}
        control-error --output-fields --status
    } | paste -sd, )

{ echo "1,10,1,0"; echo "2,20,2,0"; } \
    | csv-to-bin ${target[format]} \
    | control-error "$feedback_file;fields=${feedback[fields]};binary=${feedback[format]}" --fields=${target[fields]} --binary=${target[format]} --status --verbose \
    | csv-from-bin ${target[format]},${feedback[format]},$( control-error --output-format --status ) \
    | name-value-from-csv $output_fields --prefix binary/output --line-number \
    | csv-quote --unquote --fields ,x --delimiter =

