#!/bin/bash

function output_commands
{
    local prefix=output/commands
    csv-from-bin $command_format | name-value-from-csv $command_fields --line-number --prefix $prefix | csv-quote --unquote --fields ,x --delimiter =
}

scriptname=$( readlink -f $0 )
source $( type -p comma-application-util ) || { echo "$scriptname: failed to source comma-application-util" >&2; exit 1; }

config=data/config.json
comma_path_value_to_var < <( name-value-convert < $config )

feedback_port=${feedback_address##*:} # address is a local tcp port

command_format=$( control-follow-waypoints-new --output-format --config=$config )
command_fields=$( control-follow-waypoints-new --output-fields --config=$config )

feedback_pid=

cat data/feedback.csv | csv-play | csv-to-bin $feedback_binary --flush | io-publish --size $( csv-size $feedback_binary ) tcp:$feedback_port & feedback_pid=$!

{
    # feedback trajectory is straight from 2,0 via 1,1 to 0,2 ( see data/feedback.csv )
    # fields are x,y,heading_offset,is_absolute,speed,index ( see data/config.json )
    echo 1,1,0.1,1,11.1,0
    echo 0,2,0.1,1,22.2,1
} | csv-to-bin $waypoints_binary | control-follow-waypoints-new --config=$config | output_commands
comma_status_ok || exit 1

kill $feedback_pid

