#!/usr/bin/python
import sys
import cv2
import numpy as np
from optparse import OptionParser
from snark.imaging import cv_image
from comma.io import windows_binary


if __name__ == "__main__":
    parser = OptionParser()
    parser.add_option("--binary", dest="binary", action="store_true", default=False, help="binary output", metavar="BINARY")
    (options, args) = parser.parse_args()

    output = np.zeros(1, dtype='uint64,uint32,uint32,uint32,float64')

    for i in cv_image.iterator(sys.stdin):
        intensity = np.mean(i.data)

        if options.binary:
            output[0] = (i.header['time'].astype(np.uint64), i.header['rows'], i.header['cols'], i.header['type'], intensity)
            output.tofile(sys.stdout)
            sys.stdout.flush()
        else:
            print >> sys.stdout, "{},{},{},{},{}".format(i.header['time'].item(), i.header['rows'], i.header['cols'], i.header['type'], intensity)

        # cv2.imshow('test',i.data)
        # cv2.waitKey(1)

