#!/bin/bash

scriptname=$( basename "$0" )

datadir="data"
image_csv="$datadir/image.csv"
[[ -r "$image_csv" ]] || { echo "$scriptname: cannot find input file '$image_csv'" >&2; exit 1; }

output_dir="output"
mkdir -p "$output_dir" || { echo "$scriptname: cannot create output directory '$output_dir'" >&2; exit 1; }

function get_dimensions()
{
    local nx ny
    IFS=, read nx ny < <( cat "$1" | csv-shuffle --fields=t,x,y,r,g,b --output-fields=x,y | csv-calc --format d,d max )
    echo $(( ++nx )) $(( ++ny ))
}

function output_name_values()
{
    csv-shuffle --fields=t,x,y,r,g,b --output-fields=x,y,r,g,b | name-value-from-csv --fields=x,y,r,g,b --indices=x,y
}

read nx ny < <( get_dimensions "$image_csv" )

cat "$image_csv" | output_name_values | sed 's@^@original/@'

depths=( "ub" "b" "uw" "w" "i" "f" "d" )

# conversions from ub
for depth in ${depths[@]} ; do
    out_csv="$output_dir/${depth}.csv"
    out_bin="$output_dir/${depth}.bin"
    prefix="ub2${depth}"
    cat "$image_csv" \
        | image-from-csv --fields t,x,y,b,g,r --output="rows=$ny;cols=$nx;type=3ub" \
        | cv-cat "convert-to=$depth,normalize" \
        | tee "$out_bin" \
        | image-to-csv \
        | tee "$out_csv" \
        | output_name_values \
        | sed "s@^@$prefix/@" \
        | sed 's@"@@g'
    cat "$out_csv" \
        | csv-shuffle --fields=t,x,y,r,g,b --output-fields=r,g,b \
        | csv-calc --format=d,d,d min,max \
        | name-value-from-csv --fields=r/min,g/min,b/min,r/max,g/max,b/max --prefix="$prefix" \
        | sed 's@"@@g'
done

# conversions from all other (generated) formats
other_depths=( ${depths[@]:1} )
for from in ${other_depths[@]} ; do
    for to in ${depths[@]} ; do
        infile="$output_dir/${from}.bin"
        prefix="${from}2${to}"
        out_csv="$output_dir/${prefix}.csv"
        [[ -f "$out_csv" ]] && continue
        cat "$infile" \
            | cv-cat "convert-to=$to,normalize" \
            | image-to-csv \
            | csv-shuffle --fields=t,x,y,r,g,b --output-fields=r,g,b \
            | csv-calc --format=d,d,d min,max \
            | name-value-from-csv --fields=r/min,g/min,b/min,r/max,g/max,b/max --prefix="$prefix" \
            | sed 's@"@@g'
    done
done

# for now conversions to signed 32-bit integers do not work
echo "iworks=0"
